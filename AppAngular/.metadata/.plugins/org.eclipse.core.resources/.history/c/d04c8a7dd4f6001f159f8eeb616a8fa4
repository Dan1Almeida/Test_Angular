package br.com.dnl.AppAngular.Resource;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;

import br.com.dnl.AppAngular.Model.Contatos;
import br.com.dnl.AppAngular.Service.ContatosService;
import org.springframework.web.bind.annotation.RequestBody;

@RestController
@RequestMapping("/api/contatos")
@CrossOrigin(origins = "http://localhost:4200")
public class ContatosResource {

    @Autowired
    private ContatosService contatosService;

    // ----- SALVAR -------------------------------------------------------------
    @PostMapping
    public ResponseEntity<Contatos> cadastrarContato(@RequestBody Contatos contato) {
        Contatos novoContato = contatosService.save(contato);
        return ResponseEntity.status(HttpStatus.CREATED).body(novoContato);
    }

    // ----- ENCONTRAR POR ID -------------------------------------------------------------
    @GetMapping("/{id}") // GET http://localhost:8080/api/contatos/{id}
    public ResponseEntity<Contatos> findById(@PathVariable Long id) {
        return contatosService.findById(id)
                .map(ResponseEntity::ok)
                .orElseGet(() -> ResponseEntity.status(HttpStatus.NOT_FOUND).build());
    }

    // ----- LISTAGEM -------------------------------------------------------------
    @GetMapping // GET http://localhost:8080/api/contatos
    public ResponseEntity<List<Contatos>> findAll() {
        List<Contatos> contatosList = contatosService.findAll();
        return ResponseEntity.status(HttpStatus.OK).body(contatosList);
    }

    // ----- ATUALIZAR -------------------------------------------------------------
    @PutMapping("/{id}")
    public ResponseEntity<Contatos> update(@PathVariable Long id, @RequestBody Contatos contato) {
        Contatos updContato = contatosService.update(id, contato);
        if (updContato != null) {
            return ResponseEntity.status(HttpStatus.OK).body(updContato);
        } else {
            return ResponseEntity.status(HttpStatus.NOT_FOUND).build();
        }
    }

    // ----- DELETAR -------------------------------------------------------------
    @DeleteMapping("/{id}") // DELETE http://localhost:8080/api/contatos/{id}
    public ResponseEntity<?> delete(@PathVariable Long id) {
        contatosService.delete(id);
        return new ResponseEntity<>(HttpStatus.NO_CONTENT);
    }
}
